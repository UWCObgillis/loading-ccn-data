d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
names(d) <- rci_x$new_name
library(tools)
library(readxl)
library(dplyr)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
# pull down the column info from SQL (rci)
rci <- sqlFetch(con,"report_column_info", stringsAsFactors=F)
# now we need to load the CCN data
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
#  for Testing:  file <- files[1]
for (file in files) {
### Get the file name cleaned up??? Still need to standardize this
# clean up the file names
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data")
# use the old names to get the right new names and data types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# reading it in again has less errors than trying to convert - go figure
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
# rename columns
names(d) <- rci_x$new_name
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = data.types, rownames = F)
}
varTypes <- rci_x$sql_data_type
names(varTypes) <- rci_x$new_name
library(tools)
library(readxl)
library(dplyr)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
# pull down the column info from SQL (rci)
rci <- sqlFetch(con,"report_column_info", stringsAsFactors=F)
# now we need to load the CCN data
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
#  for Testing:  file <- files[1]
for (file in files) {
### Get the file name cleaned up??? Still need to standardize this
# clean up the file names
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data")
# use the old names to get the right new names and data types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# reading it in again has less errors than trying to convert - go figure
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
# rename columns
names(d) <- rci_x$new_name
# create the varTypes - must be NAMED vector
varTypes <- rci_x$sql_data_type
names(varTypes) <- rci_x$new_name
# send it to SQL
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = data.types, rownames = F)
}
# get the columns we have
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data",n_max)
library(tools)
library(readxl)
library(dplyr)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
# pull down the column info from SQL (rci)
rci <- sqlFetch(con,"report_column_info", stringsAsFactors=F)
# now we need to load the CCN data
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
#  for Testing:  file <- files[1]
for (file in files) {
### Get the file name cleaned up??? Still need to standardize this
# clean up the file names
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
# get the columns we have
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data",n_max=0)
# use the old names to get the right new names and data types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# reading it in again has less errors than trying to convert - go figure
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
# rename columns
names(d) <- rci_x$new_name
# create the varTypes - must be NAMED vector
varTypes <- rci_x$sql_data_type
names(varTypes) <- rci_x$new_name
# send it to SQL
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F)
}
## now it looks like the errors are related to id'ing the dates with the sql variable type
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
library(tools)
library(readxl)
library(dplyr)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
# pull down the column info from SQL (rci)
rci <- sqlFetch(con,"report_column_info", stringsAsFactors=F)
# now we need to load the CCN data
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
#  for Testing:  file <- files[1]
for (file in files) {
### Get the file name cleaned up??? Still need to standardize this
# clean up the file names
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
# get the columns we have
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data",n_max=0)
# use the old names to get the right new names and data types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci) %>%
filter(r_data_type != 'skip')
# reading it in again has less errors than trying to convert - go figure
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
# rename columns
names(d) <- rci_x$new_name
# create the varTypes - must be NAMED vector
varTypes <- rci_x$sql_data_type
names(varTypes) <- rci_x$new_name
# send it to SQL
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F)
}
## now it looks like the errors are related to id'ing the dates with the sql variable type
library(tools)
library(readxl)
library(dplyr)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
# pull down the column info from SQL (rci)
rci <- sqlFetch(con,"report_column_info", stringsAsFactors=F)
# now we need to load the CCN data
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
#  for Testing:  file <- files[1]
for (file in files) {
### Get the file name cleaned up??? Still need to standardize this
# clean up the file names
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
# get the columns we have
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data",n_max=0)
# use the old names to get the right new names and data types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# reading it in again has less errors than trying to convert - go figure
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
# since we skipped some fields in some reports, we need to get a new list of fields and types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# rename columns
names(d) <- rci_x$new_name
# create the varTypes - must be NAMED vector
varTypes <- rci_x$sql_data_type
names(varTypes) <- rci_x$new_name
# send it to SQL
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F)
}
library(tools)
library(readxl)
library(dplyr)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
# pull down the column info from SQL (rci)
rci <- sqlFetch(con,"report_column_info", stringsAsFactors=F)
# now we need to load the CCN data
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
#  for Testing:  file <- files[1]
for (file in files) {
### Get the file name cleaned up??? Still need to standardize this
# clean up the file names
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
# get the columns we have
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data",n_max=0)
# use the old names to get the right new names and data types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# reading it in again has less errors than trying to convert - go figure
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
# since we skipped some fields in some reports, we need to get a new list of fields and types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# rename columns
names(d) <- rci_x$new_name
# create the varTypes - must be NAMED vector
varTypes <- rci_x$sql_data_type
names(varTypes) <- rci_x$new_name
# send it to SQL
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F)
}
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F)
close(con)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F)
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=F)
View(d)
x <- apply(d,2, max(nchar))
x <- lapply(d, function(x) max(nchar(x)))
max(x)
x <- as.data.frame(lapply(d, function(x) max(nchar(x))))
View(x)
x <- mext(x)
x <- melt(x)
library(reshape2)
x <- melt(x)
###
###   This one shouldn't have to be rerun each time, small edits should happen in a SQL environment
###
library(dplyr)
####
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
### pull from the files #??? may want to create a seperate dat folder for these
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
# for testing:  file <- files[1]
ci0 <- data.frame()
for (file in files) {
### Clean up the file name (fn)  ### ??? needs generalized
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
ci <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "col_info")
ci$report <- rep(report, length(ci$old_name))
ci <- ci %>%
select(
report,
old_name,
new_name,
r_data_type,
sql_data_type
)
ci0 <- rbind(ci0, ci)
}
#####  fix some inconsistencies
ci0$sql_data_type <- ifelse(substr(ci0$sql_data_type,1,7) =='varchar', 'varchar', ci0$sql_data_type)
####  Move to MSSQL
sqlQuery(con, "Drop Table if Exists report_column_info")
sqlSave(con, ci0, "report_column_info", rownames = F)
library(tools)
library(readxl)
library(dplyr)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
# pull down the column info from SQL (rci)
rci <- sqlFetch(con,"report_column_info", stringsAsFactors=F)
# now we need to load the CCN data
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
#  for Testing:  file <- files[1]
for (file in files) {
### Get the file name cleaned up??? Still need to standardize this
# clean up the file names
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
# get the columns we have
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data",n_max=0)
# use the old names to get the right new names and data types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# reading it in again has less errors than trying to convert - go figure
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
# since we skipped some fields in some reports, we need to get a new list of fields and types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# rename columns
names(d) <- rci_x$new_name
# create the varTypes - must be NAMED vector
varTypes <- rci_x$sql_data_type
names(varTypes) <- rci_x$new_name
# send it to SQL
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=F)
}
on <- data.frame(old_name, stringsAsFactors = T)
library(tools)
library(readxl)
library(dplyr)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
# pull down the column info from SQL (rci)
rci <- sqlFetch(con,"report_column_info", stringsAsFactors=F)
# now we need to load the CCN data
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
#  for Testing:  file <- files[1]
for (file in files) {
### Get the file name cleaned up??? Still need to standardize this
# clean up the file names
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
# get the columns we have
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data",n_max=0)
# use the old names to get the right new names and data types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# reading it in again has less errors than trying to convert - go figure
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
# since we skipped some fields in some reports, we need to get a new list of fields and types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# rename columns
names(d) <- rci_x$new_name
# create the varTypes - must be NAMED vector
varTypes <- rci_x$sql_data_type
names(varTypes) <- rci_x$new_name
# send it to SQL
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=T)
}
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=F)
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=F)
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=F, nastring=NULL)
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=F, nastring=NULL)
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=T, verbose = T)
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=T, verbose = T)
###
###   This one shouldn't have to be rerun each time, small edits should happen in a SQL environment
###
library(dplyr)
####
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
### pull from the files #??? may want to create a seperate dat folder for these
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
# for testing:  file <- files[1]
ci0 <- data.frame()
for (file in files) {
### Clean up the file name (fn)  ### ??? needs generalized
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
ci <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "col_info")
ci$report <- rep(report, length(ci$old_name))
ci <- ci %>%
select(
report,
old_name,
new_name,
r_data_type,
sql_data_type
)
ci0 <- rbind(ci0, ci)
}
#####  fix some inconsistencies
ci0$sql_data_type <- ifelse(substr(ci0$sql_data_type,1,7) =='varchar', 'varchar', ci0$sql_data_type)
####  Move to MSSQL
sqlQuery(con, "Drop Table if Exists report_column_info")
sqlSave(con, ci0, "report_column_info", rownames = F)
library(tools)
library(readxl)
library(dplyr)
source("C:/Users/bgillis/Documents/R/SQL Connections.R")
con <- mssql_con("ccn")
# pull down the column info from SQL (rci)
rci <- sqlFetch(con,"report_column_info", stringsAsFactors=F)
# now we need to load the CCN data
files <- list.files("~/CCN Accountability Data Share 6.28.2017")
files <- files[file_ext(files)=="xlsx"]
files <- files[substr(files,1,2) !="~$"]
#  for Testing:  file <- files[1]
for (file in files) {
### Get the file name cleaned up??? Still need to standardize this
# clean up the file names
report <- gsub(" ","_",
trimws(gsub("_7.11.2017.xlsx",'',
gsub("_6.29.2017.xlsx",'',
gsub("_6.28.2017.xlsx",'',
gsub("hub_",'',tolower(file)),fixed=T),fixed=T),fixed=T)),fixed=T)
# get the columns we have
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data",n_max=0)
# use the old names to get the right new names and data types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# reading it in again has less errors than trying to convert - go figure
d <- read_excel(paste0("~/CCN Accountability Data Share 6.28.2017/",file),
sheet = "data", col_types = rci_x$r_data_type)
# since we skipped some fields in some reports, we need to get a new list of fields and types
old_name <- names(d)
on <- data.frame(old_name, stringsAsFactors = F)
on$report <- rep(report, length(on$old_name))
rci_x <- on %>%
left_join(rci)
# rename columns
names(d) <- rci_x$new_name
# create the varTypes - must be NAMED vector
varTypes <- rci_x$sql_data_type
names(varTypes) <- rci_x$new_name
# send it to SQL
sqlQuery(con, paste0("Drop table if exists ",report))
sqlSave(con, d, report,varTypes = varTypes, rownames = F, fast=T, verbose = T)
}
close(con)
